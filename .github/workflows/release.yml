# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go
name: Go

on:
  push:
    branches:
      - main
    tags:
      - "*"

  release:
    types: [created]

jobs:
  releases-matrix:
    name: Release Go binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, linux/arm64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        cmd: [netdata-dash, netdata-dash-agent, netdata-dash-client]
        goos: [linux, windows, darwin]
        goarch: ["386", amd64, arm64]
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm64
            goos: windows
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.19"

      - name: Dependencies
        run: go get -v ./...

      # - name: Test
      #   run: go test -v ./...

      # - name: Artifact upload
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: ${{ matrix.cmd }}-${{ matrix.goos }}-${{ matrix.goarch }}
      #     path: ${{ matrix.cmd }}-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz

      - name: Build
        run: make ./dist/${{ matrix.cmd }}

      - name: Archive
        run: tar -cvzf ${{ matrix.cmd }}-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz dist/${{ matrix.cmd }} README.md LICENSE

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ matrix.cmd }}-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz
          asset_name: ${{ matrix.cmd }}-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz
          asset_content_type: application/gzip
